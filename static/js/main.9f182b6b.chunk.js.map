{"version":3,"sources":["components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","error","isLoading","personSlug","useParams","length","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","setIsLoading","setError","useEffect","fetchedPeople","populatedPeopleWithParents","find","motherPerson","fatherPerson","catch","finally","NotFoundPage","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"mQAAaA,EAAW,WACtB,OAAO,oBAAIC,UAAU,QAAd,sBACR,E,qBCOM,SAASC,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKV,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECMTW,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,cAAC,IAAD,CACEC,GAAE,kBAAaD,EAAOE,MACtBd,UAAWe,IAAW,CACpB,kBAAkC,MAAfH,EAAOI,MAH9B,SAMGJ,EAAOK,MAGb,ECPYC,EAA+B,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACpDC,EAAeC,cAAfD,WAER,OACE,qBAAKtB,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGqB,GAAa,cAAC,EAAD,KAEZA,GACA,qCACGD,GACC,mBAAG,UAAQ,qBAAqBpB,UAAU,kBAA1C,SACGoB,KAIHD,EAAOK,QACP,mBAAG,UAAQ,kBAAX,+CAGF,wBACE,UAAQ,cACRxB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGmB,EAAOM,KAAI,SAACb,GACX,OACE,qBACE,UAAQ,SAERZ,UAAWe,IAAW,CACpB,yBAA0BH,EAAOE,OAASQ,IAJ9C,UAOE,6BACE,cAAC,EAAD,CAAYV,OAAQA,MAGtB,6BAAKA,EAAOI,MACZ,6BAAKJ,EAAOc,OACZ,6BAAKd,EAAOe,OACZ,+BACGf,EAAOgB,QAAU,cAAC,EAAD,CAAYhB,OAAQA,EAAOgB,SAC5ChB,EAAOiB,aAAejB,EAAOgB,QAC5B,4BAAIhB,EAAOiB,cAEXjB,EAAOiB,YAAc,OAEzB,+BACGjB,EAAOkB,QAAU,cAAC,EAAD,CAAYlB,OAAQA,EAAOkB,SAC5ClB,EAAOmB,aAAenB,EAAOkB,QAC5B,4BAAIlB,EAAOmB,cAEXnB,EAAOmB,YAAc,SAxBpBnB,EAAOK,KA4BjB,gBAQhB,ECnFYe,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAOd,EAAP,KAAee,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOZ,EAAP,KAAkBc,EAAlB,KACA,EAA0BF,mBAAwB,MAAlD,mBAAOb,EAAP,KAAcgB,EAAd,KA0BA,OAxBAC,qBAAU,WACRpC,IACGK,MAAK,SAACgC,GACL,IAAMC,EAA6BD,EAAcb,KAAI,SAACb,GACpD,IAAMgB,EAASU,EAAcE,MAC3B,SAACC,GAAD,OAAkBA,EAAaxB,OAASL,EAAOiB,UAA/C,IAEIC,EAASQ,EAAcE,MAC3B,SAACE,GAAD,OAAkBA,EAAazB,OAASL,EAAOmB,UAA/C,IAGF,OAAO,2BAAKnB,GAAZ,IAAoBgB,SAAQE,UAC7B,IAEDI,EAAUK,EACX,IACAI,OAAM,WACLP,EAAS,uBACV,IACAQ,SAAQ,WACPT,GAAa,EACd,GACJ,GAAE,IAGD,qCACE,oBAAInC,UAAU,QAAd,yBACA,cAAC,EAAD,CAAamB,OAAQA,EAAQC,MAAOA,EAAOC,UAAWA,MAG3D,ECxCYwB,EAAe,WAC1B,OAAO,oBAAI7C,UAAU,QAAd,2BACR,ECOY8C,EAAM,WACjB,OACE,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACR9C,UAAU,iCACV+C,KAAK,aACL,aAAW,kBAJb,SAME,qBAAK/C,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEa,GAAG,IACHb,UAAW,gBAAGgD,EAAH,EAAGA,SAAH,OAAkBjC,IAAW,cAAe,CACrD,8BAA+BiC,GADtB,EAFb,kBASA,cAAC,IAAD,CACEhD,UAAW,gBAAGgD,EAAH,EAAGA,SAAH,OAAkBjC,IAAW,cAAe,CACrD,8BAA+BiC,GADtB,EAGXnC,GAAG,UAJL,2BAYN,sBAAMb,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUrC,GAAG,IAAIsC,SAAO,MACrD,eAAC,IAAD,CAAOF,KAAK,UAAZ,UACE,cAAC,IAAD,CAAOG,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,EAAD,SAErC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eAMpC,EChDDG,qBAAWC,SAASC,eAAe,SAA2BC,OAC5D,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.9f182b6b.chunk.js","sourcesContent":["export const HomePage = () => {\n  return <h1 className=\"title\">Home Page</h1>;\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  people: Person[];\n  error: string | null;\n  isLoading: boolean;\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people, error, isLoading }) => {\n  const { personSlug } = useParams();\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading && <Loader />}\n\n        {!isLoading && (\n          <>\n            {error && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                {error}\n              </p>\n            )}\n\n            {!people.length && (\n              <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n            )}\n\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map((person) => {\n                  return (\n                    <tr\n                      data-cy=\"person\"\n                      key={person.name}\n                      className={classNames({\n                        'has-background-warning': person.slug === personSlug,\n                      })}\n                    >\n                      <td>\n                        <PersonLink person={person} />\n                      </td>\n\n                      <td>{person.sex}</td>\n                      <td>{person.born}</td>\n                      <td>{person.died}</td>\n                      <td>\n                        {person.mother && <PersonLink person={person.mother} />}\n                        {person.motherName && !person.mother && (\n                          <p>{person.motherName}</p>\n                        )}\n                        {!person.motherName && '-'}\n                      </td>\n                      <td>\n                        {person.father && <PersonLink person={person.father} />}\n                        {person.fatherName && !person.father && (\n                          <p>{person.fatherName}</p>\n                        )}\n                        {!person.fatherName && '-'}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    getPeople()\n      .then((fetchedPeople) => {\n        const populatedPeopleWithParents = fetchedPeople.map((person) => {\n          const mother = fetchedPeople.find(\n            (motherPerson) => motherPerson.name === person.motherName,\n          );\n          const father = fetchedPeople.find(\n            (fatherPerson) => fatherPerson.name === person.fatherName,\n          );\n\n          return { ...person, mother, father };\n        });\n\n        setPeople(populatedPeopleWithParents);\n      })\n      .catch(() => {\n        setError('Something went wrong');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <PeopleTable people={people} error={error} isLoading={isLoading} />\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return <h1 className=\"title\">Page not found</h1>;\n};\n","import './App.scss';\nimport {\n  Navigate, NavLink, Route, Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":personSlug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement).render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n);\n"],"sourceRoot":""}